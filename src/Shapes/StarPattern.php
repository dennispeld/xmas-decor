<?php

namespace App\Shapes;

class StarPattern implements Pattern
{
    private string $size;

    public function __construct($size)
    {
        $this->size = $size;
    }

    /**
     * Get the pattern of Star shape
     *
     * @return array
     */
    public function get(): array
    {
        switch ($this->size) {
            case 'S':
                return [
                    1 => [[' ' => 3], ['+' => 1]],
                    2 => [[' ' => 3], ['X' => 1]],
                    3 => [['+' => 1], ['X' => 5], ['+' => 1]],
                    4 => [[' ' => 3], ['X' => 1]],
                    5 => [[' ' => 3], ['+' => 1]],
                ];
            case 'M':
                return [
                    1 => [[' ' => 5], ['+' => 1]],
                    2 => [[' ' => 5], ['X' => 1]],
                    3 => [[' ' => 3], ['X' => 5]],
                    4 => [['+' => 1], ['X' => 9], ['+' => 1]],
                    5 => [[' ' => 3], ['X' => 5]],
                    6 => [[' ' => 5], ['X' => 1]],
                    7 => [[' ' => 5], ['+' => 1]],
                ];
            case 'L':
                return [
                    1 => [[' ' => 8], ['+' => 1]],
                    2 => [[' ' => 8], ['X' => 1]],
                    3 => [[' ' => 7], ['X' => 3]],
                    4 => [[' ' => 5], ['X' => 7]],
                    5 => [[' ' => 3], ['X' => 11]],
                    6 => [['+' => 1], ['X' => 15], ['+' => 1]],
                    7 => [[' ' => 3], ['X' => 11]],
                    8 => [[' ' => 5], ['X' => 7]],
                    9 => [[' ' => 7], ['X' => 3]],
                    10 => [[' ' => 8], ['X' => 1]],
                    11 => [[' ' => 8], ['+' => 1]],
                ];
            default:
                return [];
        }
    }
}